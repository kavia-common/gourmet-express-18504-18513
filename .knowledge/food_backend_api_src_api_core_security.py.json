{"is_source_file": true, "format": "Python", "description": "This Python source file provides security utilities for the backend API, including password hashing, verification, and JWT token creation and decoding.", "external_files": ["./config"], "external_methods": ["settings.ACCESS_TOKEN_EXPIRE_MINUTES", "settings.SECRET_KEY", "jwt.encode", "jwt.decode"], "published": [], "classes": [], "methods": [{"name": "bool verify_password(plain_password: str, hashed_password: str)", "description": "Verify a plaintext password against its hash.", "scope": "", "scopeKind": ""}, {"name": "str get_password_hash(password: str)", "description": "Generate a secure hash for a password.", "scope": "", "scopeKind": ""}, {"name": "str create_access_token(data: dict[str, Any], expires_minutes: Optional[int] = None)", "description": "Create a JWT access token with optional expiration.", "scope": "", "scopeKind": ""}, {"name": "dict[str,Any]|None decode_access_token(token: str)", "description": "Decode a JWT access token, returning payload or None.", "scope": "", "scopeKind": ""}], "calls": ["jwt.encode", "jwt.decode", "settings.ACCESS_TOKEN_EXPIRE_MINUTES", "settings.SECRET_KEY", "datetime.now", "timedelta"], "search-terms": ["security", "JWT", "password hash", "token creation", "token decoding", "bcrypt", "JWTError"], "state": 2, "file_id": 7, "knowledge_revision": 16, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/core/security.py", "pattern": "/^def create_access_token(data: dict[str, Any], expires_minutes: Optional[int] = None) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(data: dict[str, Any], expires_minutes: Optional[int] = None)"}, {"_type": "tag", "name": "decode_access_token", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/core/security.py", "pattern": "/^def decode_access_token(token: str) -> dict[str, Any] | None:$/", "language": "Python", "typeref": "typename:dict[str,Any]|None", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/core/security.py", "pattern": "/^def get_password_hash(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/core/security.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/core/security.py", "pattern": "/^def verify_password(plain_password: str, hashed_password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(plain_password: str, hashed_password: str)"}], "hash": "94ff243b76ac8c98a2410f1fcecd4e1a", "format-version": 4, "code-base-name": "food_backend_api", "filename": "food_backend_api/src/api/core/security.py", "fields": [{"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"16": ""}]}