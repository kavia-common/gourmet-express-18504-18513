{"is_source_file": true, "format": "Python", "description": "This file defines authentication-related API routes for user registration, login, and retrieving current user info. It uses FastAPI framework components, Pydantic models for data validation, and in-memory storage for user data.", "external_files": ["../core/security", "../repositories/in_memory"], "external_methods": ["get_password_hash", "verify_password", "create_access_token", "decode_access_token"], "published": ["register", "login", "get_me"], "classes": [{"name": "RegisterRequest", "description": "Pydantic model for user registration request containing email, password, and optional full name."}, {"name": "TokenResponse", "description": "Pydantic model for the response containing JWT access token and token type."}], "methods": [{"name": "Optional[UserRecord] get_user_by_email(email: str)", "description": "Retrieve a user record from in-memory database by email, case-insensitive.", "scope": "", "scopeKind": ""}, {"name": "Optional[UserRecord] authenticate_user(email: str, password: str)", "description": "Verify user credentials and retrieve user record if valid.", "scope": "", "scopeKind": ""}, {"name": "register(payload: RegisterRequest)", "description": "API endpoint to register a new user, store in in-memory DB, and return JWT.", "scope": "", "scopeKind": ""}, {"name": "login(form_data: OAuth2PasswordRequestForm = Depends())", "description": "API endpoint to authenticate user and provide JWT token.", "scope": "", "scopeKind": ""}, {"name": "UserRecord get_current_user(token: str = Depends(oauth2_scheme))", "description": "Dependency to decode JWT and retrieve the current authenticated user.", "scope": "", "scopeKind": ""}, {"name": "get_me(current_user: UserRecord = Depends(get_current_user))", "description": "API endpoint to retrieve details of the current authenticated user.", "scope": "", "scopeKind": ""}], "calls": ["get_password_hash", "verify_password", "create_access_token", "decode_access_token"], "search-terms": ["auth_router", "OAuth2PasswordBearer", "TokenResponse", "register", "login", "get_current_user", "InMemoryDB", "UserRecord"], "state": 2, "file_id": 10, "knowledge_revision": 22, "git_revision": "", "ctags": [{"_type": "tag", "name": "RegisterRequest", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/auth.py", "pattern": "/^class RegisterRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TokenResponse", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/auth.py", "pattern": "/^class TokenResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "access_token", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/auth.py", "pattern": "/^    access_token: str = Field(..., description=\"JWT access token\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TokenResponse", "scopeKind": "class"}, {"_type": "tag", "name": "authenticate_user", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/auth.py", "pattern": "/^def authenticate_user(email: str, password: str) -> Optional[UserRecord]:$/", "language": "Python", "typeref": "typename:Optional[UserRecord]", "kind": "function", "signature": "(email: str, password: str)"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/auth.py", "pattern": "/^    email: EmailStr = Field(..., description=\"Email address of the user\")$/", "language": "Python", "typeref": "typename:EmailStr", "kind": "variable", "scope": "RegisterRequest", "scopeKind": "class"}, {"_type": "tag", "name": "full_name", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/auth.py", "pattern": "/^    full_name: Optional[str] = Field(None, description=\"Full name of the user\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "RegisterRequest", "scopeKind": "class"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/auth.py", "pattern": "/^def get_current_user(token: str = Depends(oauth2_scheme)) -> UserRecord:$/", "language": "Python", "typeref": "typename:UserRecord", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme))"}, {"_type": "tag", "name": "get_me", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/auth.py", "pattern": "/^def get_me(current_user: UserRecord = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: UserRecord = Depends(get_current_user))"}, {"_type": "tag", "name": "get_user_by_email", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/auth.py", "pattern": "/^def get_user_by_email(email: str) -> Optional[UserRecord]:$/", "language": "Python", "typeref": "typename:Optional[UserRecord]", "kind": "function", "signature": "(email: str)"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/auth.py", "pattern": "/^def login(form_data: OAuth2PasswordRequestForm = Depends()):$/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends())"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/auth.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/auth.py", "pattern": "/^    password: str = Field(..., min_length=6, description=\"Password for the account\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "RegisterRequest", "scopeKind": "class"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/auth.py", "pattern": "/^def register(payload: RegisterRequest):$/", "language": "Python", "kind": "function", "signature": "(payload: RegisterRequest)"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/auth.py", "pattern": "/^router = APIRouter(tags=[\"Auth\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "token_type", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/auth.py", "pattern": "/^    token_type: str = Field(\"bearer\", description=\"Type of the token\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TokenResponse", "scopeKind": "class"}], "hash": "6a01dc6847f796fdc4036d11d8d1017d", "format-version": 4, "code-base-name": "food_backend_api", "filename": "food_backend_api/src/api/routers/auth.py", "fields": [{"name": "str access_token", "scope": "TokenResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "EmailStr email", "scope": "RegisterRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] full_name", "scope": "RegisterRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str password", "scope": "RegisterRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter(tags=[\"Auth\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str token_type", "scope": "TokenResponse", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"22": ""}]}