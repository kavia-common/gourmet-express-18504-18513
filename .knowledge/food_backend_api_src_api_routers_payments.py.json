{"is_source_file": true, "format": "Python", "description": "This file defines API routes for payment-related operations in a FastAPI application, including initiating and verifying payments, with mock implementations for testing.", "external_files": ["../repositories/in_memory", ".auth"], "external_methods": ["get_current_user"], "published": [], "classes": [{"name": "PaymentInitiateRequest", "description": "Data model for payment initiation request, including order ID and method."}, {"name": "PaymentInitiateResponse", "description": "Data model for the response after initiating a payment, including payment ID, status, and optional client secret."}, {"name": "PaymentVerifyRequest", "description": "Data model for payment verification request containing the payment ID."}], "methods": [{"name": "initiate_payment(payload: PaymentInitiateRequest, current_user: UserRecord = Depends(get_current_user))", "description": "Handle payment initiation request, mock implementation returning payment details based on method.", "scope": "", "scopeKind": ""}, {"name": "verify_payment(payload: PaymentVerifyRequest, current_user: UserRecord = Depends(get_current_user))", "description": "Handle payment verification request, mock implementation updating order status to paid.", "scope": "", "scopeKind": ""}], "calls": ["InMemoryDB.orders.get", "InMemoryDB.orders.__setitem__", "get_current_user", "HTTPException"], "search-terms": ["payments", "initiate_payment", "verify_payment", "APIRouter", "PaymentInitiateRequest", "PaymentInitiateResponse", "PaymentVerifyRequest"], "state": 2, "file_id": 15, "knowledge_revision": 32, "git_revision": "", "ctags": [{"_type": "tag", "name": "PaymentInitiateRequest", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/payments.py", "pattern": "/^class PaymentInitiateRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "PaymentInitiateResponse", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/payments.py", "pattern": "/^class PaymentInitiateResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "PaymentVerifyRequest", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/payments.py", "pattern": "/^class PaymentVerifyRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "initiate_payment", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/payments.py", "pattern": "/^def initiate_payment(payload: PaymentInitiateRequest, current_user: UserRecord = Depends(get_cur/", "language": "Python", "kind": "function", "signature": "(payload: PaymentInitiateRequest, current_user: UserRecord = Depends(get_current_user))"}, {"_type": "tag", "name": "method", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/payments.py", "pattern": "/^    method: Literal[\"card\", \"wallet\", \"cod\"] = Field(..., description=\"Payment method\")$/", "language": "Python", "typeref": "typename:Literal[\"card\", \"wallet\", \"cod\"]", "kind": "variable", "scope": "PaymentInitiateRequest", "scopeKind": "class"}, {"_type": "tag", "name": "order_id", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/payments.py", "pattern": "/^    order_id: str = Field(..., description=\"Order ID to pay for\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "PaymentInitiateRequest", "scopeKind": "class"}, {"_type": "tag", "name": "payment_id", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/payments.py", "pattern": "/^    payment_id: str = Field(..., description=\"Mock payment ID returned earlier\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "PaymentVerifyRequest", "scopeKind": "class"}, {"_type": "tag", "name": "payment_id", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/payments.py", "pattern": "/^    payment_id: str = Field(..., description=\"Mock payment ID\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "PaymentInitiateResponse", "scopeKind": "class"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/payments.py", "pattern": "/^router = APIRouter(tags=[\"Payments\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/payments.py", "pattern": "/^    status: Literal[\"requires_action\", \"succeeded\"] = Field(..., description=\"Mock payment statu/", "language": "Python", "typeref": "typename:Literal[\"requires_action\", \"succeeded\"]", "kind": "variable", "scope": "PaymentInitiateResponse", "scopeKind": "class"}, {"_type": "tag", "name": "verify_payment", "path": "/home/kavia/workspace/code-generation/gourmet-express-18504-18513/food_backend_api/src/api/routers/payments.py", "pattern": "/^def verify_payment(payload: PaymentVerifyRequest, current_user: UserRecord = Depends(get_current/", "language": "Python", "kind": "function", "signature": "(payload: PaymentVerifyRequest, current_user: UserRecord = Depends(get_current_user))"}], "hash": "09be410a9167dd89dc9676c9eb1e4a20", "format-version": 4, "code-base-name": "food_backend_api", "filename": "food_backend_api/src/api/routers/payments.py", "fields": [{"name": "Literal[\"card\", \"wallet\", \"cod\"] method", "scope": "PaymentInitiateRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "str order_id", "scope": "PaymentInitiateRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "str payment_id", "scope": "PaymentVerifyRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter(tags=[\"Payments\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Literal[\"requires_action\", \"succeeded\"] status", "scope": "PaymentInitiateResponse", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"32": ""}]}